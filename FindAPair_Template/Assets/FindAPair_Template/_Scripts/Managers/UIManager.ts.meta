fileFormatVersion: 2
guid: 0a19f0a195361d045babd5753ecfb8f4
importerOverride: ZEPETO.Script.Compiler:ZEPETO.Script:TypescriptAssetImporter
ScriptedImporter:
  internalIDToNameTable: []
  externalObjects: {}
  serializedVersion: 2
  userData: 
  assetBundleName: 
  assetBundleVariant: 
  script: {fileID: -1123457745, guid: 54cf806323ffe4418a4ce4cc63fe6b9d, type: 3}
  isAssemblyDeclarations: 0
  assembly: 
  generateAllTypes: 1
  types: []
  generateWrapper: 0
  overrideWrapperTypes: 0
  wrapperTypes: []
  WrapperFilters: []
  wrapperOutputDirectory: Generated
  compiledResult: '{"source":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\",
    { value: true });\r\nexports.UIPanel = void 0;\r\nconst ZEPETO_Script_1 = require(\"ZEPETO.Script\");\r\nconst
    UnityEngine_1 = require(\"UnityEngine\");\r\nconst GameManager_1 = require(\"./GameManager\");\r\nconst
    ZEPETO_Character_Controller_1 = require(\"ZEPETO.Character.Controller\");\r\nconst
    IconInteraction_1 = require(\"../IconInteraction\");\r\nvar UIPanel;\r\n(function
    (UIPanel) {\r\n    UIPanel[UIPanel[\"Start\"] = 0] = \"Start\";\r\n    UIPanel[UIPanel[\"Game\"]
    = 1] = \"Game\";\r\n    UIPanel[UIPanel[\"End\"] = 2] = \"End\";\r\n    UIPanel[UIPanel[\"None\"]
    = 3] = \"None\";\r\n})(UIPanel = exports.UIPanel || (exports.UIPanel = {}));\r\n//
    This class is responsible for controlling everything related to the UI and its
    interactions.\r\nclass UIManager extends ZEPETO_Script_1.ZepetoScriptBehaviour
    {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.timeToStart
    = 4; // This variable sets the time before the game starts\r\n        this.pairs
    = 6; // This variable save amount of pairs defined on the pairsInput\r\n    }\r\n   
    // Awake is called when an enabled script instance is being loaded.\r\n    Awake()
    {\r\n        // Singleton pattern\r\n        if (UIManager.instance != null)\r\n           
    UnityEngine_1.GameObject.Destroy(this.gameObject);\r\n        else\r\n           
    UIManager.instance = this;\r\n    }\r\n    // Start is called on the frame when
    a script is enabled just before any of the Update methods are called the first
    time\r\n    Start() {\r\n        // Get the script of the icon interaction\r\n       
    this.iconInteraction = this.iconInteractionObj.GetComponent($typeof(IconInteraction_1.default));\r\n       
    // When the player is instantiated execute the lines below\r\n        ZEPETO_Character_Controller_1.ZepetoPlayers.instance.OnAddedLocalPlayer.AddListener(()
    => {\r\n            // Find a object with the type of UIZepetoPlayerControl and
    set it on the variable\r\n            this.controlUI = UnityEngine_1.GameObject.FindObjectOfType($typeof(ZEPETO_Character_Controller_1.UIZepetoPlayerControl));\r\n       
    });\r\n        // Deactivate all counter GameObjects\r\n        this.DeactivateCounters();\r\n       
    // Call to the function InitButtonsListeners\r\n        this.InitButtonsListeners();\r\n   
    }\r\n    // This function is responsible for setting the behaviors of the buttons.\r\n   
    InitButtonsListeners() {\r\n        // Set the behaviour of the play button\r\n       
    this.playBtn.onClick.AddListener(() => {\r\n            this.OnClick();\r\n       
    });\r\n        // Set the behaviour of the rematch button\r\n        this.rematchBtn.OnClick.AddListener(()
    => {\r\n            // Call to the function ShowPanel to show the Game panel\r\n           
    this.ShowPanel(UIPanel.Game);\r\n            this.UpdatePairsFounded(0, GameManager_1.default.instance.pairAmount);\r\n       
    });\r\n        // Set the behaviour of the exit button\r\n        this.exitBtn.OnClick.AddListener(()
    => {\r\n            // Call to the function ShowPanel void to hide all the panels\r\n           
    this.ShowPanel();\r\n            // Call to the function to show the icon of
    the game\r\n            this.iconInteraction.ShowIcon();\r\n            // Call
    to the function that resets the matrix on the GameManager\r\n            GameManager_1.default.instance.ResetMatrix();\r\n       
    });\r\n        // Set the behaviour of the addOne button\r\n        this.addOneBtn.OnClick.AddListener(()
    => {\r\n            // Add one to the pairs limiting it by the function LimitPairAmount
    of the GameManager\r\n            this.pairs = GameManager_1.default.instance.LimitPairAmount(++this.pairs);\r\n           
    // Show the pairs in to the pairs input text\r\n            this.pairsInput.text
    = this.pairs.toString();\r\n        });\r\n        // Set the behaviour of the
    restOne button\r\n        this.restOneBtn.OnClick.AddListener(() => {\r\n           
    // Rest one to the pairs limiting it by the function LimitPairAmount of the GameManager\r\n           
    this.pairs = GameManager_1.default.instance.LimitPairAmount(--this.pairs);\r\n           
    // Show the pairs in to the pairs input text\r\n            this.pairsInput.text
    = this.pairs.toString();\r\n        });\r\n        // Set the behaviour of the
    pairsInput when the value changes\r\n        this.pairsInput.onValueChanged.AddListener(()
    => {\r\n            // Set the pairs variable to the input parsed on int\r\n           
    this.pairs = parseInt(this.pairsInput.text);\r\n            // Limit the pairs
    by the function LimitPairAmount of the GameManager\r\n            this.pairs
    = GameManager_1.default.instance.LimitPairAmount(this.pairs);\r\n           
    // Show the pairs in to the pairs input text\r\n            this.pairsInput.text
    = this.pairs.toString();\r\n        });\r\n        // Call to the function ShowPanel
    void to hide all the panels\r\n        this.ShowPanel();\r\n    }\r\n    OnClick()
    {\r\n        // Set the result of the function LimitPairAmount of the GameManager
    on the pairs\r\n        this.pairs = GameManager_1.default.instance.LimitPairAmount(this.pairs);\r\n       
    // Show the value of pairs on the pairsInput text\r\n        this.pairsInput.text
    = this.pairs.toString();\r\n        // Disable the buttons of the pairs settings\r\n       
    this.addOneBtn.enabled = false;\r\n        this.restOneBtn.enabled = false;\r\n       
    this.pairsInput.enabled = false;\r\n        // Call to the WaitToStart coroutine\r\n       
    this.StartCoroutine(this.WaitToStart());\r\n    }\r\n    ;\r\n    // This coroutine
    is responsible for displaying the countdown before the start of the game.\r\n   
    *WaitToStart() {\r\n        // First we set a counter with the timeToStart variable\r\n       
    let counter = this.timeToStart;\r\n        // We active the counter object\r\n       
    this.counterObj.SetActive(true);\r\n        // Deactivate the startMenu\r\n       
    this.startMenu.SetActive(false);\r\n        // Check if all the cards are created
    so we can start\r\n        if (!GameManager_1.default.instance.cardsCreated)
    {\r\n            this.DeactivateCounters();\r\n            // We show that we
    are creating the cards on the screen\r\n            this.counterText.text = \"Creating
    cards...\";\r\n            // Check if the cards are not created\r\n           
    if (!GameManager_1.default.instance.cardsCreated) {\r\n                console.log(\"Waiting
    cards...\");\r\n                // We wait until the cards are created\r\n               
    yield new UnityEngine_1.WaitUntil(() => GameManager_1.default.instance.cardsCreated
    == true);\r\n                // Call to the function to set the pair amount on
    the GameManager\r\n            }\r\n        }\r\n        // Call to the function
    to set the pair amount on the GameManager\r\n        GameManager_1.default.instance.SetPairAmount(this.pairs);\r\n       
    // Then we will loop until the counter is less than 0\r\n        while (counter
    > 0) {\r\n            switch (counter) {\r\n                case 4:\r\n                   
    this.counter3.SetActive(true);\r\n                    break;\r\n               
    case 3:\r\n                    this.counter2.SetActive(true);\r\n                   
    break;\r\n                case 2:\r\n                    this.counter1.SetActive(true);\r\n                   
    break;\r\n                case 1:\r\n                    this.counterStart.SetActive(true);\r\n                   
    break;\r\n            }\r\n            // Wait 1 second\r\n            yield
    new UnityEngine_1.WaitForSeconds(1);\r\n            this.DeactivateCounters();\r\n           
    // Rest 1 to counter\r\n            counter--;\r\n        }\r\n        // And
    enable again all the buttons of the pairs settings on the start panel\r\n       
    this.addOneBtn.enabled = true;\r\n        this.restOneBtn.enabled = true;\r\n       
    this.pairsInput.enabled = true;\r\n        // Deactivate the counter object\r\n       
    this.counterObj.SetActive(false);\r\n        // Activate the startMenu\r\n       
    this.startMenu.SetActive(true);\r\n        // And show the game panel calling
    to the ShowPanel function\r\n        this.ShowPanel(UIPanel.Game);\r\n    }\r\n   
    // This function will show the selected panel sended as parameter\r\n    ShowPanel(panel
    = UIPanel.None) {\r\n        // First deactivate all the panels\r\n        this.startPanel.SetActive(false);\r\n       
    this.gamePanel.SetActive(false);\r\n        this.endPanel.SetActive(false);\r\n       
    // Then based on the parameter we will select the correspondent panel to show\r\n       
    switch (panel) {\r\n            case UIPanel.Start:\r\n                // Active
    the start panel\r\n                this.startPanel.SetActive(true);\r\n               
    this.infoStart.SetActive(false);\r\n                break;\r\n            case
    UIPanel.Game:\r\n                // Active the game panel\r\n               
    this.gamePanel.SetActive(true);\r\n                break;\r\n            case
    UIPanel.End:\r\n                // Active the end panel\r\n                this.endPanel.SetActive(true);\r\n               
    // And update the total tries calling to the UpdateTotalTries function\r\n               
    this.UpdateTotalTries(GameManager_1.default.instance.tries);\r\n               
    break;\r\n            default:\r\n                // Deactivate the exit buttton
    to close the game\r\n                this.exitBtn.gameObject.SetActive(false);\r\n               
    this.ControlPlayer(true);\r\n                this.infoStart.SetActive(true);\r\n               
    break;\r\n        }\r\n    }\r\n    // This function will active the blocker
    based on the parameter\r\n    ShowBlocker(show) {\r\n        // Active the blocker
    object\r\n        this.blocker.SetActive(show);\r\n    }\r\n    // This function
    will update the Pairs founded number based on the parameters\r\n    UpdatePairsFounded(pairs,
    pairsLeft) {\r\n        // Updated the pairsFounded text with the parameters\r\n       
    this.pairsFounded.text = pairs.toString() + \" / \" + pairsLeft.toString();\r\n   
    }\r\n    // This function will update the total tries number based on the parameter\r\n   
    UpdateTotalTries(tries) {\r\n        // Updated the totalTries text with the
    parameter\r\n        this.totalTries.text = tries.toString();\r\n    }\r\n   
    // This function active or deactive the control of the player\r\n    ControlPlayer(activePlayer)
    {\r\n        // If the controlUI is not null, deactivate the object\r\n       
    this.controlUI?.gameObject.SetActive(activePlayer);\r\n        // Check if the
    player have to be active and set the camera sensitivity on 5 or 0 \r\n       
    if (activePlayer)\r\n            ZEPETO_Character_Controller_1.ZepetoPlayers.instance.cameraData.sensitivity
    = 5;\r\n        else\r\n            ZEPETO_Character_Controller_1.ZepetoPlayers.instance.cameraData.sensitivity
    = 0;\r\n    }\r\n    // Deactivate all counter GameObjects\r\n    DeactivateCounters()
    {\r\n        this.counter1.SetActive(false);\r\n        this.counter2.SetActive(false);\r\n       
    this.counter3.SetActive(false);\r\n        this.counterStart.SetActive(false);\r\n   
    }\r\n}\r\nexports.default = UIManager;\r\n//# sourceMappingURL=data:application/json;base64,","assetPath":"Assets/FindAPair_Template/_Scripts/Managers/UIManager.ts","manifest":{"properties":[{"assembly":"UnityEngine.CoreModule","name":"iconInteractionObj","type":"UnityEngine.GameObject","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"UnityEngine.CoreModule","name":"startPanel","type":"UnityEngine.GameObject","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"Header","args":["\"Panels\""]},{"name":"SerializeField","args":[]}]},{"assembly":"UnityEngine.CoreModule","name":"gamePanel","type":"UnityEngine.GameObject","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"UnityEngine.CoreModule","name":"endPanel","type":"UnityEngine.GameObject","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"UnityEngine.UI","name":"playBtn","type":"UnityEngine.UI.Button","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"Header","args":["\"Buttons\""]},{"name":"SerializeField","args":[]}]},{"assembly":"ZEPETO.World.Gui","name":"exitBtn","type":"ZEPETO.World.Gui.RoundedRectangleButton","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"ZEPETO.World.Gui","name":"rematchBtn","type":"ZEPETO.World.Gui.RoundedRectangleButton","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"ZEPETO.World.Gui","name":"addOneBtn","type":"ZEPETO.World.Gui.RoundedRectangleButton","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"ZEPETO.World.Gui","name":"restOneBtn","type":"ZEPETO.World.Gui.RoundedRectangleButton","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"UnityEngine.CoreModule","name":"startMenu","type":"UnityEngine.GameObject","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"Header","args":["\"References\""]},{"name":"SerializeField","args":[]}]},{"assembly":"UnityEngine.CoreModule","name":"counterObj","type":"UnityEngine.GameObject","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"ZEPETO.World.Gui","name":"counterText","type":"ZEPETO.World.Gui.ZepetoText","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"UnityEngine.CoreModule","name":"blocker","type":"UnityEngine.GameObject","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"ZEPETO.World.Gui","name":"pairsFounded","type":"ZEPETO.World.Gui.ZepetoText","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"ZEPETO.World.Gui","name":"totalTries","type":"ZEPETO.World.Gui.ZepetoText","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"UnityEngine.UI","name":"pairsInput","type":"UnityEngine.UI.InputField","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"UnityEngine.CoreModule","name":"infoStart","type":"UnityEngine.GameObject","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"UnityEngine.CoreModule","name":"counter1","type":"UnityEngine.GameObject","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"UnityEngine.CoreModule","name":"counter2","type":"UnityEngine.GameObject","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"UnityEngine.CoreModule","name":"counter3","type":"UnityEngine.GameObject","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"UnityEngine.CoreModule","name":"counterStart","type":"UnityEngine.GameObject","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]}],"name":"UIManager","description":"","hasAnimatorMove":false},"isCompiled":true}'
  typescriptHash: cc5f25dc72f414b7156fb772eec0a16b
  onlyWriteTrigger: 0
