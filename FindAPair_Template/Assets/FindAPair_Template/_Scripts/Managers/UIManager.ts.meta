fileFormatVersion: 2
guid: 0a19f0a195361d045babd5753ecfb8f4
importerOverride: ZEPETO.Script.Compiler:ZEPETO.Script:TypescriptAssetImporter
ScriptedImporter:
  internalIDToNameTable: []
  externalObjects: {}
  serializedVersion: 2
  userData: 
  assetBundleName: 
  assetBundleVariant: 
  script: {fileID: -1123457745, guid: 54cf806323ffe4418a4ce4cc63fe6b9d, type: 3}
  isAssemblyDeclarations: 0
  assembly: 
  generateAllTypes: 1
  types: []
  generateWrapper: 0
  overrideWrapperTypes: 0
  wrapperTypes: []
  WrapperFilters: []
  wrapperOutputDirectory: Generated
  compiledResult: '{"source":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\",
    { value: true });\r\nexports.UIPanel = void 0;\r\nconst ZEPETO_Script_1 = require(\"ZEPETO.Script\");\r\nconst
    UnityEngine_1 = require(\"UnityEngine\");\r\nconst GameManager_1 = require(\"./GameManager\");\r\nvar
    UIPanel;\r\n(function (UIPanel) {\r\n    UIPanel[UIPanel[\"Start\"] = 0] = \"Start\";\r\n   
    UIPanel[UIPanel[\"Game\"] = 1] = \"Game\";\r\n    UIPanel[UIPanel[\"End\"] =
    2] = \"End\";\r\n    UIPanel[UIPanel[\"None\"] = 3] = \"None\";\r\n})(UIPanel
    = exports.UIPanel || (exports.UIPanel = {}));\r\n// This class is responsible
    for controlling everything related to the UI and its interactions.\r\nclass UIManager
    extends ZEPETO_Script_1.ZepetoScriptBehaviour {\r\n    constructor() {\r\n       
    super(...arguments);\r\n        this.pairs = 6; // This variable save amount
    of pairs defined on the pairsInput\r\n    }\r\n    // Awake is called when an
    enabled script instance is being loaded.\r\n    Awake() {\r\n        // Singleton
    pattern\r\n        if (ZEPETO_Script_1.ZepetoScriptBehaviour.op_Inequality(UIManager.instance,
    null))\r\n            UnityEngine_1.GameObject.Destroy(this.gameObject);\r\n       
    else\r\n            UIManager.instance = this;\r\n    }\r\n    // Start is called
    on the frame when a script is enabled just before any of the Update methods are
    called the first time\r\n    Start() {\r\n        // Call to the function InitButtonsListeners\r\n       
    this.InitButtonsListeners();\r\n    }\r\n    // This function is responsible
    for setting the behaviors of the buttons.\r\n    InitButtonsListeners() {\r\n       
    // Set the behaviour of the play button\r\n        this.playBtn.OnClick.AddListener(()
    => {\r\n            // Set the result of the function LimitPairAmount of the
    GameManager on the pairs\r\n            this.pairs = GameManager_1.default.instance.LimitPairAmount(this.pairs);\r\n           
    // Show the value of pairs on the pairsInput text\r\n            this.pairsInput.text
    = this.pairs.toString();\r\n            // Call to the function to set the pair
    amount on the GameManager\r\n            GameManager_1.default.instance.SetPairAmount(this.pairs);\r\n           
    // Disable the buttons of the pairs settings\r\n            this.addOneBtn.enabled
    = false;\r\n            this.restOneBtn.enabled = false;\r\n            this.pairsInput.enabled
    = false;\r\n            // Call to the WaitToStart coroutine\r\n            this.StartCoroutine(this.WaitToStart());\r\n       
    });\r\n        // Set the behaviour of the rematch button\r\n        this.rematchBtn.OnClick.AddListener(()
    => {\r\n            // Call to the function ShowPanel to show the Game panel\r\n           
    this.ShowPanel(UIPanel.Game);\r\n        });\r\n        // Set the behaviour
    of the exit button\r\n        this.exitBtn.OnClick.AddListener(() => {\r\n           
    // Call to the function ShowPanel void to hide all the panels\r\n           
    this.ShowPanel();\r\n        });\r\n        // Set the behaviour of the addOne
    button\r\n        this.addOneBtn.OnClick.AddListener(() => {\r\n            //
    Add one to the pairs limiting it by the function LimitPairAmount of the GameManager\r\n           
    this.pairs = GameManager_1.default.instance.LimitPairAmount(++this.pairs);\r\n           
    // Show the pairs in to the pairs input text\r\n            this.pairsInput.text
    = this.pairs.toString();\r\n        });\r\n        // Set the behaviour of the
    restOne button\r\n        this.restOneBtn.OnClick.AddListener(() => {\r\n           
    // Rest one to the pairs limiting it by the function LimitPairAmount of the GameManager\r\n           
    this.pairs = GameManager_1.default.instance.LimitPairAmount(--this.pairs);\r\n           
    // Show the pairs in to the pairs input text\r\n            this.pairsInput.text
    = this.pairs.toString();\r\n        });\r\n        // Call to the function ShowPanel
    void to hide all the panels\r\n        this.ShowPanel();\r\n    }\r\n    // This
    coroutine is responsible for displaying the countdown before the start of the
    game.\r\n    *WaitToStart() {\r\n        // First we set a counter with the timeToStart
    variable\r\n        let counter = this.timeToStart;\r\n        // we active the
    counter object\r\n        this.counterObj.SetActive(true);\r\n        // Then
    we will loop until the counter is less than 0\r\n        while (counter > 0)
    {\r\n            // Update the counter text by the counter number\r\n           
    this.counterText.text = counter.toString();\r\n            // Wait 1 second\r\n           
    yield new UnityEngine_1.WaitForSeconds(1);\r\n            // Rest 1 to counter\r\n           
    counter--;\r\n            // Update the counter text by the counter number\r\n           
    this.counterText.text = counter.toString();\r\n        }\r\n        // Once the
    time is 0 we show the Start! word on the counter text\r\n        this.counterText.text
    = \"Start!\";\r\n        // Then wait 1 second\r\n        yield new UnityEngine_1.WaitForSeconds(1);\r\n       
    // And enable again all the buttons of the pairs settings on the start panel\r\n       
    this.addOneBtn.enabled = true;\r\n        this.restOneBtn.enabled = true;\r\n       
    this.pairsInput.enabled = true;\r\n        // Deactivate the counter object\r\n       
    this.counterObj.SetActive(false);\r\n        // And show the game panel calling
    to the ShowPanel function\r\n        this.ShowPanel(UIPanel.Game);\r\n    }\r\n   
    // This function will show the selected panel sended as parameter\r\n    ShowPanel(panel
    = UIPanel.None) {\r\n        // First deactivate all the panels\r\n        this.startPanel.SetActive(false);\r\n       
    this.gamePanel.SetActive(false);\r\n        this.endPanel.SetActive(false);\r\n       
    // Then based on the parameter we will select the correspondent panel to show\r\n       
    switch (panel) {\r\n            case UIPanel.Start:\r\n                // Active
    the start panel\r\n                this.startPanel.SetActive(true);\r\n               
    break;\r\n            case UIPanel.Game:\r\n                // Active the game
    panel\r\n                this.gamePanel.SetActive(true);\r\n                break;\r\n           
    case UIPanel.End:\r\n                // Active the end panel\r\n               
    this.endPanel.SetActive(true);\r\n                // And update the total tries
    calling to the UpdateTotalTries function\r\n                this.UpdateTotalTries(GameManager_1.default.instance.tries);\r\n               
    break;\r\n            default:\r\n                // Deactivate the exit buttton
    to close the game\r\n                this.exitBtn.gameObject.SetActive(false);\r\n               
    break;\r\n        }\r\n    }\r\n    // This function will active the blocker
    based on the parameter\r\n    ShowBlocker(show) {\r\n        // Active the blocker
    object\r\n        this.blocker.SetActive(show);\r\n    }\r\n    // This function
    will update the Pairs founded number based on the parameters\r\n    UpdatePairsFounded(pairs,
    pairsLeft) {\r\n        // Updated the pairsFounded text with the parameters\r\n       
    this.pairsFounded.text = pairs.toString() + \" / \" + pairsLeft.toString();\r\n   
    }\r\n    // This function will update the total tries number based on the parameter\r\n   
    UpdateTotalTries(tries) {\r\n        // Updated the totalTries text with the
    parameter\r\n        this.totalTries.text = tries.toString();\r\n    }\r\n}\r\nexports.default
    = UIManager;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVUlNYW5hZ2VyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiVUlNYW5hZ2VyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLGlEQUFxRDtBQUNyRCw2Q0FBeUQ7QUFFekQsK0NBQXdDO0FBR3hDLElBQVksT0FFWDtBQUZELFdBQVksT0FBTztJQUNmLHVDQUFLLENBQUE7SUFBRSxxQ0FBSSxDQUFBO0lBQUUsbUNBQUcsQ0FBQTtJQUFFLHFDQUFJLENBQUE7QUFDMUIsQ0FBQyxFQUZXLE9BQU8sR0FBUCxlQUFPLEtBQVAsZUFBTyxRQUVsQjtBQUNELCtGQUErRjtBQUMvRixNQUFxQixTQUFVLFNBQVEscUNBQXFCO0lBQTVEOztRQTBCWSxVQUFLLEdBQVcsQ0FBQyxDQUFDLENBQUMsK0RBQStEO0lBNEo5RixDQUFDO0lBMUpHLG1FQUFtRTtJQUNuRSxLQUFLO1FBQ0Qsb0JBQW9CO1FBQ3BCLElBekNDLHFDQUFxQixDQW1LRSxhQUMzQixDQTNIUSxTQUFTLENBQUMsUUFBUSxFQUFJLElBQUk7WUFBRyx3QkFBVSxDQUFDLE9BQU8sQ0FBRSxJQUFJLENBQUMsVUFBVSxDQUFFLENBQUM7O1lBQ25FLFNBQVMsQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDO0lBQ25DLENBQUM7SUFFRCx3SEFBd0g7SUFDeEgsS0FBSztRQUNELDRDQUE0QztRQUM1QyxJQUFJLENBQUMsb0JBQW9CLEVBQUUsQ0FBQztJQUNoQyxDQUFDO0lBRUQseUVBQXlFO0lBQ3pFLG9CQUFvQjtRQUNoQix1Q0FBdUM7UUFDdkMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFFLEdBQUcsRUFBRTtZQUNuQyxpRkFBaUY7WUFDakYsSUFBSSxDQUFDLEtBQUssR0FBRyxxQkFBVyxDQUFDLFFBQVEsQ0FBQyxlQUFlLENBQUUsSUFBSSxDQUFDLEtBQUssQ0FBRSxDQUFDO1lBRWhFLGlEQUFpRDtZQUNqRCxJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksR0FBRyxJQUFJ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","assetPath":"Assets/MainProject/_Scripts/Managers/UIManager.ts","manifest":{"properties":[{"assembly":"UnityEngine.CoreModule","name":"startPanel","type":"UnityEngine.GameObject","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"Header","args":["\"Panels\""]},{"name":"SerializeField","args":[]}]},{"assembly":"UnityEngine.CoreModule","name":"gamePanel","type":"UnityEngine.GameObject","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"UnityEngine.CoreModule","name":"endPanel","type":"UnityEngine.GameObject","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"ZEPETO.World.Gui","name":"playBtn","type":"ZEPETO.World.Gui.RoundedRectangleButton","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"Header","args":["\"Buttons\""]},{"name":"SerializeField","args":[]}]},{"assembly":"ZEPETO.World.Gui","name":"exitBtn","type":"ZEPETO.World.Gui.RoundedRectangleButton","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"ZEPETO.World.Gui","name":"rematchBtn","type":"ZEPETO.World.Gui.RoundedRectangleButton","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"ZEPETO.World.Gui","name":"addOneBtn","type":"ZEPETO.World.Gui.RoundedRectangleButton","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"ZEPETO.World.Gui","name":"restOneBtn","type":"ZEPETO.World.Gui.RoundedRectangleButton","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"UnityEngine.CoreModule","name":"counterObj","type":"UnityEngine.GameObject","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"Header","args":["\"References\""]},{"name":"SerializeField","args":[]}]},{"assembly":"ZEPETO.World.Gui","name":"counterText","type":"ZEPETO.World.Gui.ZepetoText","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"UnityEngine.CoreModule","name":"blocker","type":"UnityEngine.GameObject","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"ZEPETO.World.Gui","name":"pairsFounded","type":"ZEPETO.World.Gui.ZepetoText","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"ZEPETO.World.Gui","name":"totalTries","type":"ZEPETO.World.Gui.ZepetoText","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"UnityEngine.UI","name":"pairsInput","type":"UnityEngine.UI.InputField","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"mscorlib","name":"timeToStart","type":"System.Single","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"Header","args":["\"Settings\""]},{"name":"SerializeField","args":[]}]}],"name":"UIManager","description":"","hasAnimatorMove":false},"isCompiled":true}'
  typescriptHash: d7484ae4b40c23a6712d7a63686dfd95
  onlyWriteTrigger: 0
