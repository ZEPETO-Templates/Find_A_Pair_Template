fileFormatVersion: 2
guid: 0a19f0a195361d045babd5753ecfb8f4
importerOverride: ZEPETO.Script.Compiler:ZEPETO.Script:TypescriptAssetImporter
ScriptedImporter:
  internalIDToNameTable: []
  externalObjects: {}
  serializedVersion: 2
  userData: 
  assetBundleName: 
  assetBundleVariant: 
  script: {fileID: -1123457745, guid: 54cf806323ffe4418a4ce4cc63fe6b9d, type: 3}
  isAssemblyDeclarations: 0
  assembly: 
  generateAllTypes: 1
  types: []
  generateWrapper: 0
  overrideWrapperTypes: 0
  wrapperTypes: []
  WrapperFilters: []
  wrapperOutputDirectory: Generated
  compiledResult: '{"source":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\",
    { value: true });\r\nexports.UIPanel = void 0;\r\nconst ZEPETO_Script_1 = require(\"ZEPETO.Script\");\r\nconst
    UnityEngine_1 = require(\"UnityEngine\");\r\nconst GameManager_1 = require(\"./GameManager\");\r\nconst
    ZEPETO_Character_Controller_1 = require(\"ZEPETO.Character.Controller\");\r\nconst
    IconInteraction_1 = require(\"../IconInteraction\");\r\nvar UIPanel;\r\n(function
    (UIPanel) {\r\n    UIPanel[UIPanel[\"Start\"] = 0] = \"Start\";\r\n    UIPanel[UIPanel[\"Game\"]
    = 1] = \"Game\";\r\n    UIPanel[UIPanel[\"End\"] = 2] = \"End\";\r\n    UIPanel[UIPanel[\"None\"]
    = 3] = \"None\";\r\n})(UIPanel = exports.UIPanel || (exports.UIPanel = {}));\r\n//
    This class is responsible for controlling everything related to the UI and its
    interactions.\r\nclass UIManager extends ZEPETO_Script_1.ZepetoScriptBehaviour
    {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.pairs
    = 6; // This variable save amount of pairs defined on the pairsInput\r\n    }\r\n   
    // Awake is called when an enabled script instance is being loaded.\r\n    Awake()
    {\r\n        // Singleton pattern\r\n        if (ZEPETO_Script_1.ZepetoScriptBehaviour.op_Inequality(UIManager.instance,
    null))\r\n            UnityEngine_1.GameObject.Destroy(this.gameObject);\r\n       
    else\r\n            UIManager.instance = this;\r\n    }\r\n    // Start is called
    on the frame when a script is enabled just before any of the Update methods are
    called the first time\r\n    Start() {\r\n        // Get the script of the icon
    interaction\r\n        this.iconInteraction = this.iconInteractionObj.GetComponent($typeof(IconInteraction_1.default));\r\n       
    // When the player is instantiated execute the lines below\r\n        ZEPETO_Character_Controller_1.ZepetoPlayers.instance.OnAddedLocalPlayer.AddListener(()
    => {\r\n            // Find a object with the type of UIZepetoPlayerControl and
    set it on the variable\r\n            this.controlUI = UnityEngine_1.GameObject.FindObjectOfType($typeof(ZEPETO_Character_Controller_1.UIZepetoPlayerControl));\r\n       
    });\r\n        // Call to the function InitButtonsListeners\r\n        this.InitButtonsListeners();\r\n   
    }\r\n    // This function is responsible for setting the behaviors of the buttons.\r\n   
    InitButtonsListeners() {\r\n        // Set the behaviour of the play button\r\n       
    this.playBtn.onClick.AddListener(() => {\r\n            this.OnClick();\r\n       
    });\r\n        // Set the behaviour of the rematch button\r\n        this.rematchBtn.OnClick.AddListener(()
    => {\r\n            // Call to the function ShowPanel to show the Game panel\r\n           
    this.ShowPanel(UIPanel.Game);\r\n            this.UpdatePairsFounded(0, GameManager_1.default.instance.pairAmount);\r\n       
    });\r\n        // Set the behaviour of the exit button\r\n        this.exitBtn.OnClick.AddListener(()
    => {\r\n            // Call to the function ShowPanel void to hide all the panels\r\n           
    this.ShowPanel();\r\n            // Call to the function to show the icon of
    the game\r\n            this.iconInteraction.ShowIcon();\r\n            // Call
    to the function that resets the matrix on the GameManager\r\n            GameManager_1.default.instance.ResetMatrix();\r\n       
    });\r\n        // Set the behaviour of the addOne button\r\n        this.addOneBtn.OnClick.AddListener(()
    => {\r\n            // Add one to the pairs limiting it by the function LimitPairAmount
    of the GameManager\r\n            this.pairs = GameManager_1.default.instance.LimitPairAmount(++this.pairs);\r\n           
    // Show the pairs in to the pairs input text\r\n            this.pairsInput.text
    = this.pairs.toString();\r\n        });\r\n        // Set the behaviour of the
    restOne button\r\n        this.restOneBtn.OnClick.AddListener(() => {\r\n           
    // Rest one to the pairs limiting it by the function LimitPairAmount of the GameManager\r\n           
    this.pairs = GameManager_1.default.instance.LimitPairAmount(--this.pairs);\r\n           
    // Show the pairs in to the pairs input text\r\n            this.pairsInput.text
    = this.pairs.toString();\r\n        });\r\n        // Set the behaviour of the
    pairsInput when the value changes\r\n        this.pairsInput.onValueChanged.AddListener(()
    => {\r\n            // Set the pairs variable to the input parsed on int\r\n           
    this.pairs = parseInt(this.pairsInput.text);\r\n            // Limit the pairs
    by the function LimitPairAmount of the GameManager\r\n            this.pairs
    = GameManager_1.default.instance.LimitPairAmount(this.pairs);\r\n           
    // Show the pairs in to the pairs input text\r\n            this.pairsInput.text
    = this.pairs.toString();\r\n        });\r\n        // Call to the function ShowPanel
    void to hide all the panels\r\n        this.ShowPanel();\r\n    }\r\n    OnClick()
    {\r\n        // Set the result of the function LimitPairAmount of the GameManager
    on the pairs\r\n        this.pairs = GameManager_1.default.instance.LimitPairAmount(this.pairs);\r\n       
    // Show the value of pairs on the pairsInput text\r\n        this.pairsInput.text
    = this.pairs.toString();\r\n        // Call to the function to set the pair amount
    on the GameManager\r\n        GameManager_1.default.instance.SetPairAmount(this.pairs);\r\n       
    // Disable the buttons of the pairs settings\r\n        this.addOneBtn.enabled
    = false;\r\n        this.restOneBtn.enabled = false;\r\n        this.pairsInput.enabled
    = false;\r\n        // Call to the WaitToStart coroutine\r\n        this.StartCoroutine(this.WaitToStart());\r\n   
    }\r\n    ;\r\n    // This coroutine is responsible for displaying the countdown
    before the start of the game.\r\n    *WaitToStart() {\r\n        // First we
    set a counter with the timeToStart variable\r\n        let counter = this.timeToStart;\r\n       
    // We active the counter object\r\n        this.counterObj.SetActive(true);\r\n       
    // Deactivate the startMenu\r\n        this.startMenu.SetActive(false);\r\n       
    // Check if all the cards are created so we can start\r\n        if (!GameManager_1.default.instance.cardsCreated)
    {\r\n            // We show that we are creating the cards on the screen\r\n           
    this.counterText.text = \"Creating cards...\";\r\n            // Check if the
    cards are not created\r\n            if (!GameManager_1.default.instance.cardsCreated)
    {\r\n                // We wait until the cards are created\r\n               
    yield new UnityEngine_1.WaitUntil(() => GameManager_1.default.instance.cardsCreated
    == true);\r\n            }\r\n        }\r\n        // Then we will loop until
    the counter is less than 0\r\n        while (counter > 0) {\r\n            //
    Update the counter text by the counter number\r\n            this.counterText.text
    = counter.toString();\r\n            // Wait 1 second\r\n            yield new
    UnityEngine_1.WaitForSeconds(1);\r\n            // Rest 1 to counter\r\n           
    counter--;\r\n            // Update the counter text by the counter number\r\n           
    this.counterText.text = counter.toString();\r\n        }\r\n        // Once the
    time is 0 we show the Start! word on the counter text\r\n        this.counterText.text
    = \"Start!\";\r\n        // Then wait 1 second\r\n        yield new UnityEngine_1.WaitForSeconds(1);\r\n       
    // And enable again all the buttons of the pairs settings on the start panel\r\n       
    this.addOneBtn.enabled = true;\r\n        this.restOneBtn.enabled = true;\r\n       
    this.pairsInput.enabled = true;\r\n        // Deactivate the counter object\r\n       
    this.counterObj.SetActive(false);\r\n        // Activate the startMenu\r\n       
    this.startMenu.SetActive(true);\r\n        // And show the game panel calling
    to the ShowPanel function\r\n        this.ShowPanel(UIPanel.Game);\r\n    }\r\n   
    // This function will show the selected panel sended as parameter\r\n    ShowPanel(panel
    = UIPanel.None) {\r\n        // First deactivate all the panels\r\n        this.startPanel.SetActive(false);\r\n       
    this.gamePanel.SetActive(false);\r\n        this.endPanel.SetActive(false);\r\n       
    // Then based on the parameter we will select the correspondent panel to show\r\n       
    switch (panel) {\r\n            case UIPanel.Start:\r\n                // Active
    the start panel\r\n                this.startPanel.SetActive(true);\r\n               
    break;\r\n            case UIPanel.Game:\r\n                // Active the game
    panel\r\n                this.gamePanel.SetActive(true);\r\n                break;\r\n           
    case UIPanel.End:\r\n                // Active the end panel\r\n               
    this.endPanel.SetActive(true);\r\n                // And update the total tries
    calling to the UpdateTotalTries function\r\n                this.UpdateTotalTries(GameManager_1.default.instance.tries);\r\n               
    break;\r\n            default:\r\n                // Deactivate the exit buttton
    to close the game\r\n                this.exitBtn.gameObject.SetActive(false);\r\n               
    this.ControlPlayer(true);\r\n                break;\r\n        }\r\n    }\r\n   
    // This function will active the blocker based on the parameter\r\n    ShowBlocker(show)
    {\r\n        // Active the blocker object\r\n        this.blocker.SetActive(show);\r\n   
    }\r\n    // This function will update the Pairs founded number based on the parameters\r\n   
    UpdatePairsFounded(pairs, pairsLeft) {\r\n        // Updated the pairsFounded
    text with the parameters\r\n        this.pairsFounded.text = pairs.toString()
    + \" / \" + pairsLeft.toString();\r\n    }\r\n    // This function will update
    the total tries number based on the parameter\r\n    UpdateTotalTries(tries)
    {\r\n        // Updated the totalTries text with the parameter\r\n        this.totalTries.text
    = tries.toString();\r\n    }\r\n    // This function active or deactive the control
    of the player\r\n    ControlPlayer(activePlayer) {\r\n        // If the controlUI
    is not null, deactivate the object\r\n        this.controlUI?.gameObject.SetActive(activePlayer);\r\n       
    // Check if the player have to be active and set the camera sensitivity on 5
    or 0 \r\n        if (activePlayer)\r\n            ZEPETO_Character_Controller_1.ZepetoPlayers.instance.cameraData.sensitivity
    = 5;\r\n        else\r\n            ZEPETO_Character_Controller_1.ZepetoPlayers.instance.cameraData.sensitivity
    = 0;\r\n    }\r\n}\r\nexports.default = UIManager;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVUlNYW5hZ2VyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiVUlNYW5hZ2VyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLGlEQUFxRDtBQUNyRCw2Q0FBb0U7QUFFcEUsK0NBQXdDO0FBRXhDLDZFQUFtRjtBQUNuRix3REFBaUQ7QUFFakQsSUFBWSxPQUVYO0FBRkQsV0FBWSxPQUFPO0lBQ2YsdUNBQUssQ0FBQTtJQUFFLHFDQUFJLENBQUE7SUFBRSxtQ0FBRyxDQUFBO0lBQUUscUNBQUksQ0FBQTtBQUMxQixDQUFDLEVBRlcsT0FBTyxHQUFQLGVBQU8sS0FBUCxlQUFPLFFBRWxCO0FBQ0QsK0ZBQStGO0FBQy9GLE1BQXFCLFNBQVUsU0FBUSxxQ0FBcUI7SUFBNUQ7O1FBOEJZLFVBQUssR0FBVyxDQUFDLENBQUMsQ0FBQywrREFBK0Q7SUF1TjlGLENBQUM7SUFuTkcsbUVBQW1FO0lBQ25FLEtBQUs7UUFDRCxvQkFBb0I7UUFDcEIsSUFqREMscUNBQXFCLENBeUpILGFBQWMsQ0F4RzdCLFNBQVMsQ0FBQyxRQUFRLEVBQUksSUFBSTtZQUFFLHdCQUFVLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQzs7WUFDL0QsU0FBUyxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUM7SUFDbkMsQ0FBQztJQUVELHdIQUF3SDtJQUN4SCxLQUFLO1FBQ0QseUNBQXlDO1FBQ3pDLElBQUksQ0FBQyxlQUFlLEdBQUcsSUFBSSxDQUFDLGtCQUFrQixDQUFDLFlBQVksU0FBQyx5QkFBZSxFQUFHLENBQUM7UUFFL0UsMERBQTBEO1FBQzFELDJDQUFhLENBQUMsUUFBUSxDQUFDLGtCQUFrQixDQUFDLFdBQVcsQ0FBQyxHQUFHLEVBQUU7WUFDdkQsa0ZBQWtGO1lBQ2xGLElBQUksQ0FBQyxTQUFTLEdBQUcsd0JBQVUsQ0FBQyxnQkFBZ0IsU0FBQyxtREFBcUIsRUFBRyxDQUFDO1FBQzFFLENBQUMsQ0FBQyxDQUFDO1FBRUgsNENBQTRDO1FB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","assetPath":"Assets/FindAPair_Template/_Scripts/Managers/UIManager.ts","manifest":{"properties":[{"assembly":"UnityEngine.CoreModule","name":"iconInteractionObj","type":"UnityEngine.GameObject","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"UnityEngine.CoreModule","name":"startPanel","type":"UnityEngine.GameObject","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"Header","args":["\"Panels\""]},{"name":"SerializeField","args":[]}]},{"assembly":"UnityEngine.CoreModule","name":"gamePanel","type":"UnityEngine.GameObject","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"UnityEngine.CoreModule","name":"endPanel","type":"UnityEngine.GameObject","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"UnityEngine.UI","name":"playBtn","type":"UnityEngine.UI.Button","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"Header","args":["\"Buttons\""]},{"name":"SerializeField","args":[]}]},{"assembly":"ZEPETO.World.Gui","name":"exitBtn","type":"ZEPETO.World.Gui.RoundedRectangleButton","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"ZEPETO.World.Gui","name":"rematchBtn","type":"ZEPETO.World.Gui.RoundedRectangleButton","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"ZEPETO.World.Gui","name":"addOneBtn","type":"ZEPETO.World.Gui.RoundedRectangleButton","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"ZEPETO.World.Gui","name":"restOneBtn","type":"ZEPETO.World.Gui.RoundedRectangleButton","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"UnityEngine.CoreModule","name":"startMenu","type":"UnityEngine.GameObject","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"Header","args":["\"References\""]},{"name":"SerializeField","args":[]}]},{"assembly":"UnityEngine.CoreModule","name":"counterObj","type":"UnityEngine.GameObject","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"ZEPETO.World.Gui","name":"counterText","type":"ZEPETO.World.Gui.ZepetoText","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"UnityEngine.CoreModule","name":"blocker","type":"UnityEngine.GameObject","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"ZEPETO.World.Gui","name":"pairsFounded","type":"ZEPETO.World.Gui.ZepetoText","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"ZEPETO.World.Gui","name":"totalTries","type":"ZEPETO.World.Gui.ZepetoText","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"UnityEngine.UI","name":"pairsInput","type":"UnityEngine.UI.InputField","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"mscorlib","name":"timeToStart","type":"System.Single","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"Header","args":["\"Settings\""]},{"name":"SerializeField","args":[]}]}],"name":"UIManager","description":"","hasAnimatorMove":false},"isCompiled":true}'
  typescriptHash: fb0de0260dfb98d7c8ab0dd91b4537f1
  onlyWriteTrigger: 0
