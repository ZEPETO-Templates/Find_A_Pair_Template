fileFormatVersion: 2
guid: 973fbf2751fb4654cb5d2f8acdb422a6
importerOverride: ZEPETO.Script.Compiler:ZEPETO.Script:TypescriptAssetImporter
ScriptedImporter:
  internalIDToNameTable: []
  externalObjects: {}
  serializedVersion: 2
  userData: 
  assetBundleName: 
  assetBundleVariant: 
  script: {fileID: -1123457745, guid: 54cf806323ffe4418a4ce4cc63fe6b9d, type: 3}
  isAssemblyDeclarations: 0
  assembly: 
  generateAllTypes: 1
  types: []
  generateWrapper: 0
  overrideWrapperTypes: 0
  wrapperTypes: []
  WrapperFilters: []
  wrapperOutputDirectory: Generated
  compiledResult: '{"source":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\",
    { value: true });\r\nconst UnityEngine_1 = require(\"UnityEngine\");\r\nconst
    ZEPETO_Script_1 = require(\"ZEPETO.Script\");\r\nconst UICard_1 = require(\"../UICard\");\r\n//
    This class is responsible for handling everything related to the gameplay of
    the game, calling other managers if necessary.\r\nclass GameManager extends ZEPETO_Script_1.ZepetoScriptBehaviour
    {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.cards
    = new Map();\r\n    }\r\n    // Awake is called when an enabled script instance
    is being loaded.\r\n    Awake() {\r\n        // Singleton pattern\r\n       
    if (ZEPETO_Script_1.ZepetoScriptBehaviour.op_Inequality(GameManager.instance,
    null))\r\n            UnityEngine_1.GameObject.Destroy(this.gameObject);\r\n       
    else\r\n            GameManager.instance = this;\r\n        this.selections =
    [];\r\n    }\r\n    Start() {\r\n        this.CardsCreation();\r\n        this.MatrixCreation();\r\n   
    }\r\n    CardsCreation() {\r\n        let counter = 0;\r\n        this.sprites.forEach(sprite
    => {\r\n            this.cards.set(counter, sprite);\r\n            counter++;\r\n       
    });\r\n    }\r\n    MatrixCreation() {\r\n        this.LimitPairAmount();\r\n       
    let width = this.DeterminateWidth();\r\n        let cardsToCreate = this.pairAmount
    * 2;\r\n        let row = this.CreateRow();\r\n        let rowParent = row.transform;\r\n       
    let x = 0;\r\n        let y = 0;\r\n        let cardId = 0;\r\n        while
    (cardsToCreate > 0) {\r\n            if (x == width && cardsToCreate > 0) {\r\n               
    row = this.CreateRow();\r\n                rowParent = row.transform;\r\n               
    y++;\r\n                x = 0;\r\n            }\r\n            let newCard =
    UnityEngine_1.GameObject.Instantiate(this._card, rowParent);\r\n            let
    newCardScript = newCard.GetComponent($typeof(UICard_1.default));\r\n           
    if ((cardsToCreate % 2) == 0 && cardsToCreate != this.pairAmount * 2)\r\n               
    cardId++;\r\n            if (cardId >= this.cards.size)\r\n                cardId
    = 0;\r\n            newCardScript.id = cardId;\r\n            newCardScript.showingSprite
    = this.cards.get(cardId);\r\n            cardsToCreate--;\r\n            x++;\r\n       
    }\r\n    }\r\n    CreateRow() {\r\n        let obj = UnityEngine_1.GameObject.Instantiate(this._row,
    this._tableParent);\r\n        return obj;\r\n    }\r\n    LimitPairAmount()
    {\r\n        if (this.pairAmount <= 1)\r\n            this.pairAmount = 2;\r\n       
    if (this.pairAmount > 16)\r\n            this.pairAmount = 16;\r\n    }\r\n   
    DeterminateWidth() {\r\n        let width = 0;\r\n        if (this.pairAmount
    < 6)\r\n            width = this.pairAmount;\r\n        if (this.pairAmount >
    6)\r\n            width = this.pairAmount / 2;\r\n        if (this.pairAmount
    > 12)\r\n            width = 8;\r\n        return width;\r\n    }\r\n    SelectCard(card)
    {\r\n        this.selections.push(card);\r\n        card.ShowCard(true);\r\n       
    if (this.selections.length >= 2)\r\n            this.CompareSelections();\r\n   
    }\r\n    CompareSelections() {\r\n        if (this.selections[0].id == this.selections[1].id)\r\n           
    console.log(\"Son iguales!\");\r\n        else\r\n            console.log(\"Son
    diferentes!\");\r\n        this.selections[0].ShowCard(false);\r\n        this.selections[1].ShowCard(false);\r\n       
    for (let i = 0; i <= this.selections.length; i++)\r\n            this.selections.pop();\r\n   
    }\r\n}\r\nexports.default = GameManager;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiR2FtZU1hbmFnZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJHYW1lTWFuYWdlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLDZDQUFtRTtBQUNuRSxpREFBcUQ7QUFFckQsc0NBQStCO0FBRS9CLDhIQUE4SDtBQUM5SCxNQUFxQixXQUFZLFNBQVEscUNBQXFCO0lBQTlEOztRQWdCWSxVQUFLLEdBQXdCLElBQUksR0FBRyxFQUFrQixDQUFDO0lBMkZuRSxDQUFDO0lBeEZHLG1FQUFtRTtJQUNuRSxLQUFLO1FBQ0Qsb0JBQW9CO1FBQ3BCLElBM0JDLHFDQUFxQixDQWlIMjBHLGFBQWMsQ0F0RjEyRyxXQUFXLENBQUMsUUFBUSxFQUFJLElBQUk7WUFBRyx3QkFBVSxDQUFDLE9BQU8sQ0FBRSxJQUFJLENBQUMsVUFBVSxDQUFFLENBQUM7O1lBQ3JFLFdBQVcsQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDO1FBRWpDLElBQUksQ0FBQyxVQUFVLEdBQUcsRUFBRSxDQUFDO0lBQ3pCLENBQUM7SUFFRCxLQUFLO1FBQ0QsSUFBSSxDQUFDLGFBQWEsRUFBRSxDQUFDO1FBQ3JCLElBQUksQ0FBQyxjQUFjLEVBQUUsQ0FBQztJQUMxQixDQUFDO0lBRUQsYUFBYTtRQUNULElBQUksT0FBTyxHQUFXLENBQUMsQ0FBQztRQUN4QixJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBRSxNQUFNLENBQUMsRUFBRTtZQUMzQixJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBRSxPQUFPLEVBQUUsTUFBTSxDQUFFLENBQUM7WUFDbEMsT0FBTyxFQUFFLENBQUM7UUFDZCxDQUFDLENBQUUsQ0FBQztJQUNSLENBQUM7SUFFRCxjQUFjO1FBQ1YsSUFBSSxDQUFDLGVBQWUsRUFBRSxDQUFDO1FBRXZCLElBQUksS0FBSyxHQUFHLElBQUksQ0FBQyxnQkFBZ0IsRUFBRSxDQUFDO1FBRXBDLElBQUksYUFBYSxHQUFXLElBQUksQ0FBQyxVQUFVLEdBQUcsQ0FBQyxD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","assetPath":"Assets/MainProject/_Scripts/Managers/GameManager.ts","manifest":{"properties":[{"assembly":"mscorlib","name":"pairAmount","type":"System.Single","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"Header","args":["\"Amount
    of pairs (min 2 / max 16)\""]},{"name":"SerializeField","args":[]}]},{"assembly":"UnityEngine.CoreModule","name":"_tableParent","type":"UnityEngine.Transform","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"UnityEngine.CoreModule","name":"_row","type":"UnityEngine.GameObject","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"UnityEngine.CoreModule","name":"_card","type":"UnityEngine.GameObject","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"mscorlib","name":"useThumbnails","type":"System.Boolean","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"Header","args":["\"Card
    images\""]},{"name":"SerializeField","args":[]}]},{"assembly":"UnityEngine.CoreModule","name":"sprites","type":"UnityEngine.Sprite[]","isArray":true,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]}],"name":"GameManager","description":"","hasAnimatorMove":false},"isCompiled":true}'
  typescriptHash: eb6a119e3cff5bf314b2f3302af7e482
  onlyWriteTrigger: 0
