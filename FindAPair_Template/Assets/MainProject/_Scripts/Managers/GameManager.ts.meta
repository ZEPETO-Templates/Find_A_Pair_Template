fileFormatVersion: 2
guid: 973fbf2751fb4654cb5d2f8acdb422a6
importerOverride: ZEPETO.Script.Compiler:ZEPETO.Script:TypescriptAssetImporter
ScriptedImporter:
  internalIDToNameTable: []
  externalObjects: {}
  serializedVersion: 2
  userData: 
  assetBundleName: 
  assetBundleVariant: 
  script: {fileID: -1123457745, guid: 54cf806323ffe4418a4ce4cc63fe6b9d, type: 3}
  isAssemblyDeclarations: 0
  assembly: 
  generateAllTypes: 1
  types: []
  generateWrapper: 0
  overrideWrapperTypes: 0
  wrapperTypes: []
  WrapperFilters: []
  wrapperOutputDirectory: Generated
  compiledResult: "{\"source\":\"\\\"use strict\\\";\\r\\nObject.defineProperty(exports,
    \\\"__esModule\\\", { value: true });\\r\\nconst UnityEngine_1 = require(\\\"UnityEngine\\\");\\r\\nconst
    ZEPETO_Script_1 = require(\\\"ZEPETO.Script\\\");\\r\\nconst System_Collections_Generic_1
    = require(\\\"System.Collections.Generic\\\");\\r\\nconst UICard_1 = require(\\\"../UICard\\\");\\r\\nconst
    UIManager_1 = require(\\\"./UIManager\\\");\\r\\n// This class is responsible
    for handling everything related to the gameplay of the game, calling other managers
    if necessary.\\r\\nclass GameManager extends ZEPETO_Script_1.ZepetoScriptBehaviour
    {\\r\\n    constructor() {\\r\\n        super(...arguments);\\r\\n        this.pairsFounded
    = 0;\\r\\n        this.cards = new Map();\\r\\n    }\\r\\n    // Awake is called
    when an enabled script instance is being loaded.\\r\\n    Awake() {\\r\\n       
    // Singleton pattern\\r\\n        if (ZEPETO_Script_1.ZepetoScriptBehaviour.op_Inequality(GameManager.instance,
    null))\\r\\n            UnityEngine_1.GameObject.Destroy(this.gameObject);\\r\\n       
    else\\r\\n            GameManager.instance = this;\\r\\n        this.selections
    = [];\\r\\n    }\\r\\n    Start() {\\r\\n        this.CardsCreation();\\r\\n       
    this.MatrixCreation();\\r\\n    }\\r\\n    CardsCreation() {\\r\\n        let
    counter = 0;\\r\\n        this.sprites.forEach(sprite => {\\r\\n            this.cards.set(counter,
    sprite);\\r\\n            counter++;\\r\\n        });\\r\\n    }\\r\\n    ResetMatrix()
    {\\r\\n        const cards = this._tableParent.GetComponentsInChildren($typeof(UICard_1.default),
    true);\\r\\n        cards.forEach(card => {\\r\\n            card.SetFoundedCard(false);\\r\\n       
    });\\r\\n        this.ShuffleMatrix();\\r\\n        this.pairsFounded = 0;\\r\\n   
    }\\r\\n    MatrixCreation() {\\r\\n        this.LimitPairAmount();\\r\\n       
    let width = this.DeterminateWidth();\\r\\n        let cardsToCreate = this.pairAmount
    * 2;\\r\\n        let row = this.CreateRow();\\r\\n        let rowParent = row.transform;\\r\\n       
    let x = 0;\\r\\n        let y = 0;\\r\\n        let cardId = 0;\\r\\n       
    while (cardsToCreate > 0) {\\r\\n            if (x == width && cardsToCreate
    > 0) {\\r\\n                row = this.CreateRow();\\r\\n                rowParent
    = row.transform;\\r\\n                y++;\\r\\n                x = 0;\\r\\n           
    }\\r\\n            let newCard = UnityEngine_1.GameObject.Instantiate(this._card,
    rowParent);\\r\\n            let newCardScript = newCard.GetComponent($typeof(UICard_1.default));\\r\\n           
    if ((cardsToCreate % 2) == 0 && cardsToCreate != this.pairAmount * 2)\\r\\n               
    cardId++;\\r\\n            if (cardId >= this.cards.size)\\r\\n               
    cardId = 0;\\r\\n            newCardScript.id = cardId;\\r\\n            newCardScript.showingSprite
    = this.cards.get(cardId);\\r\\n            cardsToCreate--;\\r\\n           
    x++;\\r\\n        }\\r\\n        this.ShuffleMatrix();\\r\\n    }\\r\\n    ShuffleMatrix()
    {\\r\\n        const cards = this._tableParent.GetComponentsInChildren($typeof(UICard_1.default),
    true);\\r\\n        const cardCount = cards.length;\\r\\n        // Obtener una
    lista de \xEDndices para las cartas\\r\\n        const indices = new ($generic(System_Collections_Generic_1.List$1,
    $typeof(\\\"System.Double\\\")))();\\r\\n        for (let i = 0; i < cardCount;
    i++) {\\r\\n            indices.Add(i);\\r\\n        }\\r\\n        // Mezclar
    aleatoriamente los \xEDndices\\r\\n        for (let i = 0; i < cardCount; i++)
    {\\r\\n            const randomIndex = UnityEngine_1.Random.Range(0, indices.Count);\\r\\n           
    const currentIndex = indices.get_Item(i);\\r\\n            const randomSwapIndex
    = indices.get_Item(randomIndex);\\r\\n            // Intercambiar los sprites
    y los IDs entre las cartas\\r\\n            const tempSprite = cards[currentIndex].showingSprite;\\r\\n           
    cards[currentIndex].showingSprite = cards[randomSwapIndex].showingSprite;\\r\\n           
    cards[randomSwapIndex].showingSprite = tempSprite;\\r\\n            const tempId
    = cards[currentIndex].id;\\r\\n            cards[currentIndex].id = cards[randomSwapIndex].id;\\r\\n           
    cards[randomSwapIndex].id = tempId;\\r\\n        }\\r\\n        // cards.forEach(
    card => {\\r\\n        //     card.ShowCard( true );\\r\\n        // } );\\r\\n   
    }\\r\\n    CreateRow() {\\r\\n        let obj = UnityEngine_1.GameObject.Instantiate(this._row,
    this._tableParent);\\r\\n        return obj;\\r\\n    }\\r\\n    LimitPairAmount()
    {\\r\\n        if (this.pairAmount <= 1)\\r\\n            this.pairAmount = 2;\\r\\n       
    if (this.pairAmount > 16)\\r\\n            this.pairAmount = 16;\\r\\n    }\\r\\n   
    DeterminateWidth() {\\r\\n        let width = 0;\\r\\n        if (this.pairAmount
    < 6)\\r\\n            width = this.pairAmount;\\r\\n        if (this.pairAmount
    > 6)\\r\\n            width = this.pairAmount / 2;\\r\\n        if (this.pairAmount
    > 12)\\r\\n            width = 8;\\r\\n        return width;\\r\\n    }\\r\\n   
    SelectCard(card) {\\r\\n        this.selections.push(card);\\r\\n        card.ShowCard(true);\\r\\n       
    if (this.selections.length >= 2)\\r\\n            this.StartCoroutine(this.CompareSelections());\\r\\n   
    }\\r\\n    *CompareSelections() {\\r\\n        UIManager_1.default.instance.ShowBlocker(true);\\r\\n       
    if (this.selections[0].id == this.selections[1].id) {\\r\\n            this.selections[0].SetFoundedCard(true);\\r\\n           
    this.selections[1].SetFoundedCard(true);\\r\\n            this.pairsFounded++;\\r\\n           
    console.log(\\\"PairsFounded:\\\" + this.pairsFounded + \\\" of \\\" + this.pairAmount);\\r\\n           
    yield new UnityEngine_1.WaitForSeconds(1);\\r\\n            for (let i = 0; i
    <= this.selections.length; i++)\\r\\n                this.selections.pop();\\r\\n           
    this.StartCoroutine(this.CheckForWin());\\r\\n        }\\r\\n        else {\\r\\n           
    yield new UnityEngine_1.WaitForSeconds(1);\\r\\n            this.selections[0].ShowCard(false);\\r\\n           
    this.selections[1].ShowCard(false);\\r\\n            for (let i = 0; i <= this.selections.length;
    i++)\\r\\n                this.selections.pop();\\r\\n            UIManager_1.default.instance.ShowBlocker(false);\\r\\n       
    }\\r\\n    }\\r\\n    *CheckForWin() {\\r\\n        if (this.pairsFounded ==
    this.pairAmount) {\\r\\n            yield new UnityEngine_1.WaitForSeconds(0.3);\\r\\n           
    UIManager_1.default.instance.SelectPanel(UIManager_1.UIPanel.End);\\r\\n           
    this.ResetMatrix();\\r\\n        }\\r\\n        UIManager_1.default.instance.ShowBlocker(false);\\r\\n   
    }\\r\\n}\\r\\nexports.default = GameManager;\\r\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiR2FtZU1hbmFnZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJHYW1lTWFuYWdlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLDZDQUEyRjtBQUMzRixpREFBcUQ7QUFDckQsMkVBQW9EO0FBQ3BELHNDQUErQjtBQUMvQiwyQ0FBaUQ7QUFFakQsOEhBQThIO0FBQzlILE1BQXFCLFdBQVksU0FBUSxxQ0FBcUI7SUFBOUQ7O1FBZVksaUJBQVksR0FBVyxDQUFDLENBQUM7UUFFekIsVUFBSyxHQUF3QixJQUFJLEdBQUcsRUFBa0IsQ0FBQztJQThKbkUsQ0FBQztJQTNKRyxtRUFBbUU7SUFDbkUsS0FBSztRQUNELG9CQUFvQjtRQUNwQixJQTdCQyxxQ0FBcUIsQ0FzTHUzQixhQUFjLENBekp0NUIsV0FBVyxDQUFDLFFBQVEsRUFBSSxJQUFJO1lBQUcsd0JBQVUsQ0FBQyxPQUFPLENBQUUsSUFBSSxDQUFDLFVBQVUsQ0FBRSxDQUFDOztZQUNyRSxXQUFXLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQztRQUVqQyxJQUFJLENBQUMsVUFBVSxHQUFHLEVBQUUsQ0FBQztJQUN6QixDQUFDO0lBRUQsS0FBSztRQUNELElBQUksQ0FBQyxhQUFhLEVBQUUsQ0FBQztRQUNyQixJQUFJLENBQUMsY0FBYyxFQUFFLENBQUM7SUFDMUIsQ0FBQztJQUVELGFBQWE7UUFDVCxJQUFJLE9BQU8sR0FBVyxDQUFDLENBQUM7UUFDeEIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUUsTUFBTSxDQUFDLEVBQUU7WUFDM0IsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUUsT0FBTyxFQUFFLE1BQU0sQ0FBRSxDQUFDO1lBQ2xDLE9BQU8sRUFBRSxDQUFDO1FBQ2QsQ0FBQyxDQUFFLENBQUM7SUFDUixDQUFDO0lBRUQsV0FBVztRQUNQLE1BQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUMsdUJBQXVCLFNBQUMsZ0JBQU0sR0FBRyxJQUFJLENBQUUs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\",\"assetPath\":\"Assets/MainProject/_Scripts/Managers/GameManager.ts\",\"manifest\":{\"properties\":[{\"assembly\":\"mscorlib\",\"name\":\"pairAmount\",\"type\":\"System.Single\",\"isArray\":false,\"initValue\":[],\"enumKeys\":[],\"enumValues\":[],\"attributes\":[{\"name\":\"Header\",\"args\":[\"\\\"Amount
    of pairs (min 2 / max 16)\\\"\"]},{\"name\":\"SerializeField\",\"args\":[]}]},{\"assembly\":\"UnityEngine.CoreModule\",\"name\":\"_tableParent\",\"type\":\"UnityEngine.Transform\",\"isArray\":false,\"initValue\":[],\"enumKeys\":[],\"enumValues\":[],\"attributes\":[{\"name\":\"SerializeField\",\"args\":[]}]},{\"assembly\":\"UnityEngine.CoreModule\",\"name\":\"_row\",\"type\":\"UnityEngine.GameObject\",\"isArray\":false,\"initValue\":[],\"enumKeys\":[],\"enumValues\":[],\"attributes\":[{\"name\":\"SerializeField\",\"args\":[]}]},{\"assembly\":\"UnityEngine.CoreModule\",\"name\":\"_card\",\"type\":\"UnityEngine.GameObject\",\"isArray\":false,\"initValue\":[],\"enumKeys\":[],\"enumValues\":[],\"attributes\":[{\"name\":\"SerializeField\",\"args\":[]}]},{\"assembly\":\"mscorlib\",\"name\":\"useThumbnails\",\"type\":\"System.Boolean\",\"isArray\":false,\"initValue\":[],\"enumKeys\":[],\"enumValues\":[],\"attributes\":[{\"name\":\"Header\",\"args\":[\"\\\"Card
    images\\\"\"]},{\"name\":\"SerializeField\",\"args\":[]}]},{\"assembly\":\"UnityEngine.CoreModule\",\"name\":\"sprites\",\"type\":\"UnityEngine.Sprite[]\",\"isArray\":true,\"initValue\":[],\"enumKeys\":[],\"enumValues\":[],\"attributes\":[{\"name\":\"SerializeField\",\"args\":[]}]}],\"name\":\"GameManager\",\"description\":\"\",\"hasAnimatorMove\":false},\"isCompiled\":true}"
  typescriptHash: b9ecb318c929edf4972b8e9ed22f0afe
  onlyWriteTrigger: 0
